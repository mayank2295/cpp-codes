// to find the index of  first and last occurance  of an element in an sorted array 
# include <iostream>
using namespace std;

int firstoccurance(int arr[], int n, int key){
    // using binary search 
    int start = 0;
    int end = n-1;
    int mid = start + (end-start)/2;
    int ans = -1;
    while(start<=end){
        if(arr[mid]==key){
            ans = mid;
            end = mid - 1;
        }
        else if (key>arr[mid]){
            start = mid + 1;
        }
        else{
            end = mid -1;
        }
        mid = start + (end - start)/2;
    }
    return ans;
}
 int lastoccurance(int arr[] , int n,int key){
     int start = 0;
     int end = n-1;
     int mid = start + (end- start)/2;
     int ans = -1;
     while(start<=end){
         if(arr[mid]==key){
             ans = mid;
             start = mid + 1;
         }
         else if(arr[mid]<key){
             mid = start + 1;
         }
         else{
             end = mid - 1;
         }
         mid = start + (end - start)/2;
     }
     return ans;
 }

int main(){
    int n;
    cout<<"Enter the size of an array";
    cin>>n;
    int arr[n];
    for(int i =0;i<n;i++){
        cin>>arr[i];
    }
    int key;
    cout<<"Enter the element you want to search";
    cin>>key;
    int first = firstoccurance(arr,n,key);
    int last = lastoccurance(arr,n,key);
    cout<<"The first occurance of " <<key<<"is "<<first;
    cout<<"The last occurance of "<<key<<"is "<< last;
    return 0;
}
